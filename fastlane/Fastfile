# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself


default_platform(:ios)

platform :ios do
  
  before_all do
    #cocoapods
  end

  desc "发布到应用商店苹果商店"
  lane :release_apple do
    increment_build_number(xcodeproj: 'Glance.xcodeproj')
    commit_version_bump
    gym(scheme: ENV['SCHEME_NAME'],
      silent: true,  
      export_method:"app-store",
      buildlog_path:"fastlanelog",
      output_directory:"build",
      clean: true  
    )
    deliver
    review_time(platform: "iOS")
  end
  
  
  lane :commit_app_icon do |options|
    sh "git add ../Glance/Resources/Assets.xcassets/AppIcon.appiconset/*"
    sh "git commit -m \"fastlane action \"commit_app_icon\":  #{options[:message]}\""
    if options[:push]
        sh "git push origin master"
    end
  end
  
  

  desc "Export an ad_hoc file to local"
  lane :export_Ad_Hoc_IPA do
    
    add_badge(custom: "./Glance/Resources/AppIcon/icon.jpg")
    add_badge(dark: true)
    commit_app_icon(message: "Badge has been added",push: false)
    
    increment_build_number(xcodeproj: 'Glance.xcodeproj')
    commit_version_bump(force: true)
    
    gym(scheme: ENV['SCHEME_NAME'],
      silent: true,  
      export_method:"ad-hoc",
      buildlog_path:"./fastlanelog",
      output_directory:"./build",
      clean: true ,
      skip_profile_detection: true,
      export_options: {
        provisioningProfiles: {
          ENV['APP_IDENTIFIER']=>ENV['APP_PROVISIONING_ADHOC_NAME'],
          ENV['PUSH_SERVICE_IDENTIFIER']=>ENV['PUSH_SERVICE_PROVISIONING_ADHOC_NAME']
      }
    })
    
    notification(subtitle: "export complete", message: "scheme: #{ENV['SCHEME_NAME']}\nidentify: #{ENV['APP_IDENTIFIER']}")
    add_badge(custom: "./Glance/Resources/AppIcon/icon.jpg")
    commit_app_icon(message: "Badge has been reset",push: true)
    
    sh 'open ../build'
    sh 'ios-ipa-server ../build'
  end

  desc "获取开发证书和配置文件"
  lane :getDevCert do
    #register_devices(devices_file: "./fastlane/multiple-device-upload-ios.txt")
    # sh "fastlane match nuke development -force"
    match(
      git_branch: "glance",
      type: 'appstore',
      #readonly: 'true',
      verbose: true
    )
  end


  desc "Push a new beta build to TestFlight"
  lane :beta do
    increment_build_number(xcodeproj: 'Glance.xcodeproj')
    commit_version_bump
    build_app(workspace: "Glance.xcworkspace",
      clean: true ,
      scheme: ENV['SCHEME_NAME'],
      export_method:'app-store',
      include_bitcode: false,
      buildlog_path:"./fastlanelog",
      output_directory:"./build",
      skip_profile_detection: true,
      export_options: {
        provisioningProfiles: {
            ENV['APP_IDENTIFIER']=>ENV['APP_PROVISIONING_PRODUCTION_NAME'],
            ENV['PUSH_SERVICE_IDENTIFIER']=>ENV['PUSH_SERVICE_PROVISIONING_PRODUCTION_NAME']
      }
    })
    upload_to_testflight(skip_waiting_for_build_processing: false)
    notification(subtitle: "上传完成", message: "scheme: #{ENV['SCHEME_NAME']}\nidentify: #{ENV['APP_IDENTIFIER']}")
  end



end



